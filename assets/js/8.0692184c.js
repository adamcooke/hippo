(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{205:function(t,s,a){"use strict";a.r(s);var e=a(28),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"setting-up"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setting-up"}},[t._v("#")]),t._v(" Setting up")]),t._v(" "),a("p",[t._v("Each application that can use Hippo must provide a "),a("strong",[t._v("Hippo Manifest")]),t._v(" which is a series of files which define exactly how that application should be deployed. You can make your own manifests or you can just pull from a public manifest hosted in a Git repository.")]),t._v(" "),a("p",[t._v("In this section, we're going to look at the options available to you as if your manifest has already been created. We'll look at making your own manifests shortly.")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("A NOTE ABOUT NAMING")]),t._v(" "),a("p",[t._v("For this guide, we will be installing an application named "),a("strong",[t._v("postal")]),t._v(" but this can be replaced with your own application name.")])]),t._v(" "),a("h2",{attrs:{id:"files-directories"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#files-directories"}},[t._v("#")]),t._v(" Files & directories")]),t._v(" "),a("p",[t._v("Each application that you wish to deploy should have a directory on your computer (also checked into version control) which will contain the configuration for each instance of that application that you wish to deploy. This is an example directory structure for that file.")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("postal/                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Name of the application")]),t._v("\n  .git/                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Your git repository")]),t._v("\n  manifest.yaml         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Details of the application manifest")]),t._v("\n\n  production/           "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Configuration for your production instance")]),t._v("\n    config.yaml\n    secrets.yaml\n\n  staging/              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Configuration for your staging instance")]),t._v("\n    config.yaml\n    secrets.yaml\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])]),a("h2",{attrs:{id:"initalizing-this-directory"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#initalizing-this-directory"}},[t._v("#")]),t._v(" Initalizing this directory")]),t._v(" "),a("p",[t._v("The "),a("code",[t._v("hippo setup")]),t._v(" command provides functionality to create your initial configuration directory.")]),t._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("mkdir")]),t._v(" -p ~/hippo-configs\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" ~/hippo-configs\nhippo setup postal --remote https://github.com/postalhq/k8s-hippo\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Created configuration directory at /home/adam/hippo-configs/postal")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Updating local copy of remote repository...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Updating manifest from https://github.com/postalhq/k8s-hippo... done")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Update completed successfully.")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Repository....: https://github.com/postalhq/k8s-hippo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Branch........: master")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   Path..........: /")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[t._v("This will create a directory named "),a("code",[t._v("postal")]),t._v(" which will contain a file named "),a("code",[t._v("manifest.yaml")]),t._v(" which defines where your manifest is located.")]),t._v(" "),a("h2",{attrs:{id:"the-manifest-yaml-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#the-manifest-yaml-file"}},[t._v("#")]),t._v(" The "),a("code",[t._v("manifest.yaml")]),t._v(" file")]),t._v(" "),a("p",[t._v("This file exists in the root of your application configuration directory and defines where the manifest actually exists. Manifests can either be located in a Git repository (i.e. remote) or on your own machine (i.e. local).")]),t._v(" "),a("h3",{attrs:{id:"remote-manifests"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#remote-manifests"}},[t._v("#")]),t._v(" Remote manifests")]),t._v(" "),a("p",[t._v("If you wish to use a remote manifest, you should use the type as "),a("code",[t._v("remote")]),t._v(" and provide the "),a("code",[t._v("remoteOptions")]),t._v(" as shown below. By default the "),a("code",[t._v("branch")]),t._v(" will be "),a("code",[t._v("master")]),t._v(" and the "),a("code",[t._v("path")]),t._v(" will be the root of the repository.")]),t._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" remote\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("remoteOptions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("repository")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" https"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//github.com/postalhq/k8s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("hippo\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"local-manifests"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#local-manifests"}},[t._v("#")]),t._v(" Local manifests")]),t._v(" "),a("p",[t._v("If your manifest is local, you can just provide the path to the root of the manifest.")]),t._v(" "),a("div",{staticClass:"language-yaml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("source")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" local\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("localOptions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /home/adam/manifests/postal\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h3",{attrs:{id:"overriding-manifest-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#overriding-manifest-configuration"}},[t._v("#")]),t._v(" Overriding manifest configuration")]),t._v(" "),a("p",[t._v("You can, if you wish, override the manifest configuration by adding a "),a("code",[t._v("manifest.local.yaml")]),t._v(" file which will be merged when reading the main manifest file. You should exclude this "),a("code",[t._v(".local.yaml")]),t._v(" file from being committed to your repository.")])])}),[],!1,null,null,null);s.default=n.exports}}]);